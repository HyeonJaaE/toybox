{"version":3,"sources":["components/Homelanding.tsx","components/Side.tsx","components/Joker.tsx","components/Madmax.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Homelanding","id","className","src","href","Side","Joker","useState","top","window","innerHeight","left","innerWidth","divStyle","setDivStyle","mouseHandler","e","tmpX","tmpY","x","y","type","touches","clientX","clientY","onMouseMove","onTouchMove","style","Madmax","carStyle","setCarStyle","onScroll","windowW","console","log","target","scrollLeft","handleScroll","App","basename","process","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aba9da50.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport \"../style/Homelanding.scss\";\r\n\r\nconst Homelanding = () => {\r\n    return (\r\n        <div>\r\n            <div\r\n                id=\"page1\"\r\n                className=\"hl-menu d-flex flex-column justify-content-center align-items-center \"\r\n            >\r\n                <div className=\"row\">\r\n                    <h2>MovieBox</h2>\r\n                </div>\r\n                <div className=\"hl-main\">\r\n                    <div className=\"icon center\">\r\n                        <img src=\"/toybox/box.png\"></img>\r\n                    </div>\r\n\r\n                    <div className=\"icon sub a\">\r\n                        <a href=\"#page2\">\r\n                            <img src=\"/toybox/rsp.png\"></img>\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"icon sub b\">\r\n                        <img src=\"/toybox/logo192.png\"></img>\r\n                    </div>\r\n                    <div className=\"icon sub c\">\r\n                        <img src=\"/toybox/logo192.png\"></img>\r\n                    </div>\r\n                    <div className=\"icon sub d\">\r\n                        <img src=\"/toybox/logo192.png\"></img>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    // <a href=\"/toybox/rsp\">가위바위보 하러가기</a>\r\n                }\r\n            </div>\r\n            <div id=\"page2\" className=\"hl-menu d-flex align-items-center justify-content-center\">\r\n                <a href=\"/toybox/joker\">joker</a>\r\n            </div>\r\n            <div id=\"page3\" className=\"hl-menu d-flex align-items-center justify-content-center\">\r\n                <a href=\"/toybox/joker\">madmax</a>\r\n            </div>\r\n\r\n            <div id=\"sidebar\">\r\n                <ul className=\"p-0 mb-0\">\r\n                    <li>\r\n                        <a href=\"#page1\">\r\n                            <span></span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#page2\">\r\n                            <span></span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#page3\">\r\n                            <span></span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#page4\">\r\n                            <span></span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#page5\">\r\n                            <span></span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Homelanding;\r\n","import React, { useState } from \"react\";\r\nimport \"../style/Side.scss\";\r\n\r\nconst Side = () => {\r\n    return (\r\n        <div id=\"side-container\">\r\n            <div id=\"side\">\r\n                <div id=\"sideIcon\">\r\n                    <a href=\"https://github.com/hyeonjaae\">\r\n                        <img src=\"/toybox/github.png\"></img>\r\n                    </a>\r\n                </div>\r\n                <div id=\"sideIcon\">\r\n                    <a href=\"https://github.com/hyeonjaae\">\r\n                        <img src=\"/toybox/github.png\"></img>\r\n                    </a>\r\n                </div>\r\n                <div id=\"sideIcon\">\r\n                    <a href=\"https://github.com/hyeonjaae\">\r\n                        <img src=\"/toybox/github.png\"></img>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Side;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Side from \"./Side\";\r\n\r\nimport \"../style/Joker.scss\";\r\n\r\nconst Joker = () => {\r\n    const [divStyle, setDivStyle] = useState({\r\n        top: window.innerHeight * 0.3,\r\n        left: window.innerWidth * 0.3,\r\n    });\r\n\r\n    const mouseHandler = (e: any) => {\r\n        let offset = 125,\r\n            x = divStyle.left,\r\n            y = divStyle.top,\r\n            tmpX,\r\n            tmpY;\r\n\r\n        if (e.type === \"touchmove\") {\r\n            tmpX = e.touches[0].clientX;\r\n            tmpY = e.touches[0].clientY;\r\n\r\n            if (\r\n                window.innerWidth * 0.1 <= tmpX - offset &&\r\n                tmpX + offset <= window.innerWidth * 0.9\r\n            )\r\n                x = tmpX - offset;\r\n            if (\r\n                window.innerHeight * 0.1 <= tmpY - offset &&\r\n                tmpY + offset <= window.innerHeight * 0.9\r\n            )\r\n                y = tmpY - offset;\r\n\r\n            setDivStyle({\r\n                top: y,\r\n                left: x,\r\n            });\r\n        } else {\r\n            tmpX = e.clientX;\r\n            tmpY = e.clientY;\r\n\r\n            if (\r\n                window.innerWidth * 0.1 <= tmpX - offset &&\r\n                tmpX + offset <= window.innerWidth * 0.9\r\n            )\r\n                x = tmpX - offset;\r\n            if (\r\n                window.innerHeight * 0.1 <= tmpY - offset &&\r\n                tmpY + offset <= window.innerHeight * 0.9\r\n            )\r\n                y = tmpY - offset;\r\n\r\n            setDivStyle({\r\n                top: y,\r\n                left: x,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"joker\">\r\n            <Side />\r\n            <div\r\n                className=\"joker-main\"\r\n                onMouseMove={(e) => mouseHandler(e)}\r\n                onTouchMove={(e) => mouseHandler(e)}\r\n            >\r\n                <div id=\"phoenix\"></div>\r\n                <div id=\"sight\" style={divStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Joker;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Side from \"./Side\";\r\n\r\nimport \"../style/Madmax.scss\";\r\n\r\nconst Madmax = () => {\r\n    const [carStyle, setCarStyle] = useState({ left: \"0%\" });\r\n\r\n    const handleScroll = (e: any) => {\r\n        let windowW = window.innerWidth * 0.8 * 4.5;\r\n\r\n        console.log(\"element x offset\", e.target.scrollLeft, windowW);\r\n\r\n        setCarStyle({ left: (e.target.scrollLeft / windowW) * 100 + \"%\" });\r\n    };\r\n\r\n    return (\r\n        <div id=\"madmax-container\">\r\n            <Side />\r\n            <div id=\"madmax-main\">\r\n                <div id=\"madmax-box\" onScroll={(e) => handleScroll(e)}>\r\n                    <div id=\"madmax-content\">\r\n                        <div id=\"madmax-sky\">\r\n                            <div id=\"madmax-sky1\"></div>\r\n                            <div id=\"madmax-sky2\"></div>\r\n                            <div id=\"madmax-sky3\"></div>\r\n                            <div id=\"madmax-sky4\"></div>\r\n                        </div>\r\n                        <div id=\"madmax-ground\">\r\n                            <div id=\"madmax-ground1\"></div>\r\n                            <div id=\"madmax-ground2\"></div>\r\n                            <div id=\"madmax-ground3\"></div>\r\n                            <div id=\"madmax-ground4\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"car1\">\r\n                    <img src=\"/toybox/github.png\"></img>car1\r\n                </div>\r\n                <div id=\"scrollCar\" style={carStyle}>\r\n                    <img src=\"/toybox/github.png\"></img>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Madmax;\r\n","import React from \"react\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\n\nimport Homelanding from \"./components/Homelanding\";\nimport Joker from \"./components/Joker\";\nimport Madmax from \"./components/Madmax\";\n\nconst App = () => {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Route exact path=\"/\" component={Homelanding} />\n            <Route path=\"/joker\" component={Joker} />\n            <Route path=\"/madmax\" component={Madmax} />\n        </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n\n/*\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\") as HTMLElement\n);\n\nserviceWorker.unregister();\n\n*/\n"],"sourceRoot":""}